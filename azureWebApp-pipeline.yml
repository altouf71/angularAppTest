# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
# azure-pipelines.yml
# npm install Install project dependencies
# npm run build Run your build script (if applicable)

trigger:
  - main # Trigger the pipeline on pushes to the main branch

pool:
  myLapTop # Use a Linux agent for building

variables:
  appName: 'anotherAngularTest' # Name of your Azure App Service
  azureSubscription: 'Azure subscription 1(0ea2ee0e-54d2-4fb8-ab64-cd4250597f0d)' # Name of your Azure service connection

stages:
- stage: Build
  displayName: Build Node.js Application
  jobs:
  - job: BuildJob
    displayName: Build and Package
    steps:
    - task: NodeTool@0
      displayName: 'Use Node.js 20.x'
      inputs:
        versionSpec: '20.x' # Specify the Node.js version

    - script: |
        npm install -g @angular/cli
        npm install
        ng build --prod
      displayName: 'Install dependencies and Build'

    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        versioningScheme: 'off'
        packDestination: '$(Build.AtifactStgingDirectory)'
      displayName: MyWebApp

    #- task: PublishBuildArtifacts@1
    #  inputs:
    #    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #    ArtifactName: 'drop'
    #    publishLocation: 'Container'

    # In your build stage/pipeline
#    - task: PublishBuildArtifacts@1
#      inputs:
#        pathToPublish: '$(Build.ArtifactStagingDirectory)/$(appName).zip'
#        artifactName: 'myWebApp'

#    - task: DownloadBuildArtifacts@1
#      inputs:
#        buildType: 'specific'
#        project: '488af890-9aa3-402a-8504-fef1877567b7'
#        pipeline: '1'
#        specificBuildWithTriggering: true
#        buildVersionToDownload: 'latest'
#        allowPartiallySucceededBuilds: true
#        downloadType: 'single'
#        artifactName: 'myWebApp'
#        downloadPath: '$(Build.ArtifactStagingDirectory)/$(appName).zip'


#    - task: PublishPipelineArtifact@1
#      displayName: 'Publish Artifacts'
#      inputs:
#        targetPath: '$(Pipeline.Workspace)'
#        artifact: 'MyWebApp'
#        publishLocation: 'pipeline'

    - task: ArchiveFiles@2
      displayName: 'Archive Application Files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)/$(appName).zip'
        replaceExistingArchive: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
#        TargetPath: '$(Build.ArtifactStagingDirectory)/$(appName)'
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(appName).zip'
#        PathtoPublish: '$(System.DefaultWorkingDirectory)/$(appName).zip'
        ArtifactName: 'myWebApp'
#        publishLocation: 'container'
      

    #- publish: '$(Build.ArtifactStagingDirectory)/$(appName).zip'
    #  artifactName: 'myWebApp'
    #  publishLocation: 'container'
    #  displayName: 'Publish Build Artifact'

#- stage: Release
#  displayName: Release project
#  dependsOn: Build
#  jobs:
#    - job: ReleaseJob
#      displayName: Release Application
#      steps:
      
#       In your release stage/pipeline
#      - task: DownloadBuildArtifacts@0
#        inputs:
#          #buildType: 'specific'
#          project: '488af890-9aa3-402a-8504-fef1877567b7'
#          pipeline: '1'
#          buildVersionToDownload: 'latest'
#          buildType: 'current' # or 'specific' if from another build
#          artifactName: 'myWebApp'
#          #downloadPath: '$(System.DefaultWorkingDirectory)' # or a specific path
#          downloadPath: '$(Build.ArtifactStagingDirectory)/myWebApp/'
#          #downloadPath: '$(Build.ArtifactsDirectory)/'

#      - task: DownloadBuildArtifacts@1
#        inputs:
#          buildType: 'specific'
#          project: '488af890-9aa3-402a-8504-fef1877567b7'
#          pipeline: '1'
#          specificBuildWithTriggering: true
#          buildVersionToDownload: 'latest'
#          downloadType: 'single'
#          #downloadPath: '$(System.ArtifactsDirectory)'
#          downloadPath: '$(Build.ArtifatsDirectory)'
#          artifactName: myWebApp

- stage: Deploy
  displayName: Deploy to Azure App Service
  dependsOn: Build # Build  This stage depends on the successful completion of the Release stage
  jobs:
  - job: DeployJob
    displayName: Deploy Application
    steps:
    - task: AzureWebApp@1
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: '$(appName)'
        package: '$(Build.ArtifactStagingDirectory)/myWebApp/$(appName).zip' # Path to the published artifact
        #package: '$(Build.ArtifactsDirectory)/myWebApp/$(appName).zip'
        #package: '$(System.DefaultWorkingDirectory)/**/*.zip'
        #runtimeStack: 'NODE|20-lts'
        appType: 'webAppLinux' # Specify 'webAppLinux' for Linux-based App Service

#    - task: AzureWebApp@1
#      inputs:
#        azureSubscription: 'Azure subscription 1(0ea2ee0e-54d2-4fb8-ab64-cd4250597f0d)'
#        appType: 'webAppLinux'
#        appName: 'anotherAngularTest'
#        package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#        runtimeStack: 'NODE|20-lts'